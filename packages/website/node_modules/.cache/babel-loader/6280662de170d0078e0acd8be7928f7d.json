{"ast":null,"code":"import _slicedToArray from \"/Users/alexcusell/Documents/GitHub/pocket-ponics/packages/website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexcusell/Documents/GitHub/pocket-ponics/packages/website/src/components/LoginPage/Adminlogin.js\";\nimport React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { render } from 'react-dom';\nimport \"./Adminlogin.css\";\nimport AuthUtil from '../../util/auth-util';\nexport function Adminlogin(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    var _this = this;\n\n    event.preventDefault();\n    return AuthUtil.login(username, password, function () {\n      return _this.props.navigation.navigate('Admin');\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Adminlogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"For Administrator Use Only\"), \" \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"username\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Username\"), React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"Username\",\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Password\"), React.createElement(FormControl, {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Button, {\n    block: true,\n    bsSize: \"large\",\n    disabled: !validateForm(),\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Login\")));\n}\nrender(React.createElement(Adminlogin, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/alexcusell/Documents/GitHub/pocket-ponics/packages/website/src/components/LoginPage/Adminlogin.js"],"names":["React","useState","Button","FormGroup","FormControl","FormLabel","render","AuthUtil","Adminlogin","props","username","setUsername","password","setPassword","validateForm","length","handleSubmit","event","preventDefault","login","navigation","navigate","e","target","value","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,EAAyCC,SAAzC,QAA0D,iBAA1D;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,kBACAR,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACzBS,QADyB;AAAA,MACfC,WADe;;AAAA,mBAEAV,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,MAEzBW,QAFyB;AAAA,MAEfC,WAFe;;AAIhC,WAASC,YAAT,GAAwB;AACtB,WAAOJ,QAAQ,CAACK,MAAT,GAAkB,CAAlB,IAAuBH,QAAQ,CAACG,MAAT,GAAkB,CAAhD;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,WAAOX,QAAQ,CAACY,KAAT,CAAeT,QAAf,EAAyBE,QAAzB,EAAmC;AAAA,aAAM,KAAI,CAACH,KAAL,CAAWW,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,CAAN;AAAA,KAAnC,CAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAR,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAIE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAgC,IAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,WAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEN,QAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,aAAIX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAgC,IAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEZ,QADT;AAEE,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAIT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA,KAFb;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAkBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,MAAM,EAAC,OAArB;AAA6B,IAAA,QAAQ,EAAE,CAACV,YAAY,EAApD;AAAwD,IAAA,IAAI,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,CAJF,CADF;AA6BD;AACDR,MAAM,CAAC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAiBmB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjB,CAAN","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { render } from 'react-dom';\nimport \"./Adminlogin.css\";\nimport AuthUtil from '../../util/auth-util'\n\nexport function Adminlogin(props) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    return AuthUtil.login(username, password, () => this.props.navigation.navigate('Admin'))\n  }\n\n  return (\n    <div className=\"Adminlogin\">\n    <center><h1>For Administrator Use Only</h1> </center>\n    <br />\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"username\" bsSize=\"large\">\n          <FormLabel>Username</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"Username\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}\nrender(<Adminlogin />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}