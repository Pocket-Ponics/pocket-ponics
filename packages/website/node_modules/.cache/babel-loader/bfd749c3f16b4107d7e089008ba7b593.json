{"ast":null,"code":"import { Alert } from 'react';\nimport APIUtil from '../util/api-util';\nvar AuthUtil = {\n  getAuthToken: function getAuthToken(loggedOutFn, successFn) {\n    // Retrieve username and password from storage\n    var username = localStorage.getItem('username');\n    var password = localStorage.getItem('password'); //const toket = localStorage.getToken('token')\n    //console.log(username, password)\n    //console.log(\"here\")\n    // If the user is logged out, direct them to the login\n\n    if (!username || !password) {\n      return loggedOutFn();\n    }\n  },\n  login: function login(username, password, successFn) {\n    var token;\n    console.log(\"here1\");\n    APIUtil.getAuthToken(username, password).then(function (response) {\n      if (!response.token) {\n        Alert.alert('Invalid username or password');\n        return Promise.reject('Invalid username or password');\n      }\n\n      token = response.token;\n      return Promise.all([localStorage.setItem('username', username), localStorage.setItem('password', password) //localStorage.setItem('token', token)\n      ]);\n    }).then(function () {\n      window.location.href = \"http://localhost:3000/Admin\";\n      console.log(token);\n      return localStorage.setItem('token', token);\n    }).catch(function (error) {\n      window.alert('Incorrect Username or Password');\n    });\n  }\n};\nexport default AuthUtil;","map":{"version":3,"sources":["/Users/alexcusell/Documents/GitHub/pocket-ponics/packages/website/src/util/auth-util.js"],"names":["Alert","APIUtil","AuthUtil","getAuthToken","loggedOutFn","successFn","username","localStorage","getItem","password","login","token","console","log","then","response","alert","Promise","reject","all","setItem","window","location","href","catch","error"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,IAAMC,QAAQ,GAAG;AAChBC,EAAAA,YAAY,EAAE,sBAACC,WAAD,EAAcC,SAAd,EAA4B;AACzC;AACA,QAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,QAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB,CAHyC,CAIzC;AACA;AACA;AAEA;;AACA,QAAG,CAACF,QAAD,IAAa,CAACG,QAAjB,EAA2B;AAC1B,aAAOL,WAAW,EAAlB;AACA;AACD,GAbe;AAchBM,EAAAA,KAdgB,iBAcVJ,QAdU,EAcAG,QAdA,EAcUJ,SAdV,EAcqB;AACpC,QAAIM,KAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAZ,IAAAA,OAAO,CAACE,YAAR,CAAqBG,QAArB,EAA+BG,QAA/B,EACEK,IADF,CACO,UAAAC,QAAQ,EAAI;AACjB,UAAG,CAACA,QAAQ,CAACJ,KAAb,EAAoB;AACnBX,QAAAA,KAAK,CAACgB,KAAN,CAAY,8BAAZ;AACA,eAAOC,OAAO,CAACC,MAAR,CAAe,8BAAf,CAAP;AACA;;AACDP,MAAAA,KAAK,GAAGI,QAAQ,CAACJ,KAAjB;AACA,aAAOM,OAAO,CAACE,GAAR,CAAY,CAClBZ,YAAY,CAACa,OAAb,CAAqB,UAArB,EAAiCd,QAAjC,CADkB,EAElBC,YAAY,CAACa,OAAb,CAAqB,UAArB,EAAiCX,QAAjC,CAFkB,CAGlB;AAHkB,OAAZ,CAAP;AAKA,KAZF,EAaEK,IAbF,CAaO,YAAM;AACXO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,6BAArB;AACJX,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACI,aAAOJ,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BT,KAA9B,CAAP;AACA,KAjBF,EAkBEa,KAlBF,CAkBQ,UAAAC,KAAK,EAAI;AACfJ,MAAAA,MAAM,CAACL,KAAP,CAAa,gCAAb;AACA,KApBF;AAqBA;AAtCe,CAAjB;AA0CA,eAAed,QAAf","sourcesContent":["import { Alert } from 'react'\nimport APIUtil from '../util/api-util'\n\nconst AuthUtil = {\n\tgetAuthToken: (loggedOutFn, successFn) => {\n\t\t// Retrieve username and password from storage\n\t\tconst username = localStorage.getItem('username')\n\t\tconst password = localStorage.getItem('password')\n\t\t//const toket = localStorage.getToken('token')\n\t\t//console.log(username, password)\n\t\t//console.log(\"here\")\n\n\t\t// If the user is logged out, direct them to the login\n\t\tif(!username || !password) {\n\t\t\treturn loggedOutFn()\n\t\t}\n\t},\n\tlogin(username, password, successFn) {\n\t\tlet token\n\t\tconsole.log(\"here1\")\n\t\tAPIUtil.getAuthToken(username, password)\n\t\t\t.then(response => {\n\t\t\t\tif(!response.token) {\n\t\t\t\t\tAlert.alert('Invalid username or password')\n\t\t\t\t\treturn Promise.reject('Invalid username or password')\n\t\t\t\t}\n\t\t\t\ttoken = response.token\n\t\t\t\treturn Promise.all([\n\t\t\t\t\tlocalStorage.setItem('username', username),\n\t\t\t\t\tlocalStorage.setItem('password', password),\n\t\t\t\t\t//localStorage.setItem('token', token)\n\t\t\t\t])\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\twindow.location.href=\"http://localhost:3000/Admin\";\nconsole.log(token)\n\t\t\t\treturn localStorage.setItem('token', token)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\twindow.alert('Incorrect Username or Password');\n\t\t\t})\n\t},\n\t\n}\n\nexport default AuthUtil"]},"metadata":{},"sourceType":"module"}